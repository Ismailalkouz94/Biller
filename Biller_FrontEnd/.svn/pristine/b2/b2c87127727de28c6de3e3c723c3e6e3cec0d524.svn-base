<div class="silk-card border-primary">
	<div class="silk-card">
		<div class="silk-card-title">
			<div class="silk-head">
				<div class="silk-pre">
					<h4> اضافة المنتجات على طلب رقم ({{orderId}}) </h4>
				</div>
			</div>

			<!-- <a routerLink="/order/update-order">
				<button type="button" (click)="routeToDetails" id="header" class="btn waves-effect waves-light gradient-45deg-green-teal gradient-shadow">التفاصيل</button>
			</a>
			<a routerLink="/order/add-orderItem">
				<button type="button" id="item" class="btn waves-effect waves-light gradient-45deg-amber-amber gradient-shadow">المنتجات</button>
			</a> -->


			<md-divider></md-divider>
		</div>
		<div class="silk-card-content">
			<button *ngIf="!addOrUpdate" type="button" (click)="doAddOrUpdate()" id="" class="waves-effect waves-light gradient-45deg-light-blue-cyan box-shadow">
				<md-icon>add</md-icon>
			</button>
			<div *ngIf="addOrUpdate && orderStatus != 'COMPLETED' && orderStatus != 'CANCELED'">
				<form [formGroup]="form" (ngSubmit)="onSubmit()">
					<div class="form-group row">

						<input class="form-control" hidden="true" type="text" [(ngModel)]="orderItemId" [formControl]="form.controls['orderItemId']"
						/>

						<!-- <label for="example-search-input" class="col-2 col-form-label">
						الوصف
					</label>

					<div class="col-4">
						<input class="form-control" type="text"  [(ngModel)]="description" [formControl]="form.controls['description']" placeholder="">
						<small class="silk-block" *ngIf="form.controls['description'].hasError('required') && form.controls['description'].touched"
						 class="mat-text-warn">
							You must include a description.
						</small>
					</div> -->


						<label for="example-email-input" class="col-2 col-form-label">
							الفئة </label>
						<div class="col-4">
							<ngx-dropdown-treeview-select [items]="items"  [(ngModel)]="categoryId"  [(value)]="categoryId" [config]="config" [formControl]="form.controls['categoryId']"
							 (valueChange)="onValueChange($event)">
							</ngx-dropdown-treeview-select>
							<small class="silk-block" *ngIf="form.controls['categoryId'].hasError('required') && form.controls['categoryId'].touched"
							 class="mat-text-warn">
								You must include a category Id.
							</small>
						</div>


					</div>
					<div class="form-group row">

						<label for="example-email-input" class="col-2 col-form-label">
							اسم المنتج </label>
						<div class="col-4">
							<select class="form-control" [(ngModel)]="itemId" [formControl]="form.controls['itemId']" (change)="getItemUnitPrice()">
									<option [ngValue]="null"> </option>
								<option *ngFor="let item of allItems" [ngValue]="item.itemId">{{item.brandName}}</option>
							</select>
							<small class="silk-block" *ngIf="form.controls['itemId'].hasError('required') && form.controls['itemId'].touched" class="mat-text-warn">
								You must include a category Id.
							</small>
						</div>

						<label for="example-email-input" class="col-2 col-form-label">
							الوحدة </label>
						<div class="col-4">
							<select class="form-control" [(ngModel)]="unitId" [formControl]="form.controls['unitId']" (change)="getItemUnitPrice()">
									<option [ngValue]="null"> </option>
								<option *ngFor="let unit of units" [ngValue]="unit.unitId">{{unit.name}}</option>
							</select>
							<small class="silk-block" *ngIf="form.controls['unitId'].hasError('required') && form.controls['unitId'].touched" class="mat-text-warn">
								You must include a category Id.
							</small>
						</div>

					</div>

					<div class="form-group row">
						<label for="example-url-input" class="col-2 col-form-label">
							الكمية
						</label>
						<div class="col-4">
							<input class="form-control" type="number" [(ngModel)]="quantity" [formControl]="form.controls['quantity']" id="example-url-input">
							<small class="silk-block" *ngIf="form.controls['quantity'].hasError('required') && form.controls['quantity'].touched" class="mat-text-warn">
								You must include a quantity.
							</small>
						</div>


						<label for="example-email-input" class="col-2 col-form-label">
							سعر المنتج </label>
						<div class="col-4">
							<input class="form-control" type="text" [(ngModel)]="price" [formControl]="form.controls['unitPrice']" id="example-email-input">
							<small class="silk-block" *ngIf="form.controls['unitPrice'].hasError('required') && form.controls['unitPrice'].touched" class="mat-text-warn">
								You must include a Unit Price.
							</small>
						</div>



					</div>

					<input class="form-control" hidden="true" type="text" [(ngModel)]="userLoginId" [formControl]="form.controls['userLoginId']">
					<input class="form-control" hidden="true" type="text" [(ngModel)]="orderId" [formControl]="form.controls['orderId']">

					<div class="form-group row">
						<div *ngIf="edit != true" class="col-12">
							<button class="waves-effect waves-light btn gradient-45deg-light-blue-cyan box-shadow" type="submit">
								اضافة
							</button>

							<button class="waves-effect waves-light btn gradient-45deg-light-blue-cyan box-shadow" (click)="cancel()">
								الغاء
							</button>

						</div>

						<div *ngIf="edit" class="col-12">
							<button class="waves-effect waves-light btn gradient-45deg-light-blue-cyan box-shadow" type="submit">
								تعديل
							</button>
							<button class="waves-effect waves-light btn gradient-45deg-light-blue-cyan box-shadow" (click)="cancel()">
								الغاء
							</button>

						</div>
					</div>

				</form>
			</div>
			<div class="form-group row">
				<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 mb-2" widget>
					<div class="silk-card-content widget-body">
						<table class="table table-striped" [mfData]="orderItemsDate" #mf="mfDataTable" [mfRowsOnPage]="5">
							<thead class="thead-default">
								<tr>
									<!-- <th>
										رقم المنتج
									</th> -->
									<th>
											#
										</th>
									<th>
										اسم المنتج
									</th>
									<th>
										الفئة
									</th>


									<!-- <th>
										الوصف
									</th> -->

									<th>
										الوحدة
									</th>
									<th>
										الكمية
									</th>
									<th>
										السعر
									</th>

									<th>
										المجموع
									</th>
									<th>
										تعديل
									</th>
									<th>
										حذف
									</th>
								</tr>
							</thead>
							<tbody >

								<tr *ngFor="let orderItem of mf.data; let index =index; let isOdd=odd; let isEven=even">
									<!-- <th scope="row">{{orderItem.item.itemId}}</th> -->
									<td>{{index + 1}}</td>
									<td>{{orderItem.item.brandName}}</td>
									<td>{{orderItem.category.description}}</td>
									<!-- <td>{{orderItem.description}} </td> -->
									<td> {{orderItem.unit.name}}</td>
									<td> {{orderItem.quantity}}</td>
									<td> {{orderItem.unitPrice}}</td>
									<td> {{totalPrice(orderItem.quantity,orderItem.unitPrice)}}</td>
									<td>
										<!-- <button type="button" class="btn waves-effect waves-light gradient-45deg-green-teal gradient-shadow" (click)="doUpdate(orderItem)">
										تعديل</button> -->
										<md-icon *ngIf="orderStatus != 'COMPLETED' && orderStatus != 'CANCELED'" (click)="doUpdate(orderItem)">edit</md-icon>
									</td>

									<td>
										<md-icon *ngIf="orderStatus != 'COMPLETED' && orderStatus != 'CANCELED'" (click)="openConfirmationDialog(orderItem.orderItemId)">delete</md-icon>
										<!-- <button type="button" class="btn waves-effect waves-light gradient-45deg-amber-amber gradient-shadow" (click)="delete(orderItem.orderItemId)">حذف</button> -->
									</td>
								</tr>


							</tbody>
							<tfoot>
									<tr>
										<td colspan="4">
											<mfBootstrapPaginator [rowsOnPageSet]="[5,10,25]"></mfBootstrapPaginator>
										</td>
									</tr>
								</tfoot>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>